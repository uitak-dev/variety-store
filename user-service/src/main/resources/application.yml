server:
  port: 0

spring:
  application:
    name: user-service

  datasource:
    url: jdbc:h2:tcp://localhost/~/h2db/variety-store
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
#    show-sql: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true

  security:
    oauth2:
      client:
        registration:                                                       # client setting
          keycloak-user-login-client:                                       # oidc-client
            provider: keycloak                                              # required
            client-id: account                                              # required
            client-secret: W3MXVvOE505ozUZBaIzVFsjbR6HabUMJ                 # required
            redirectUri: http://localhost:8000/login/oauth2/code/keycloak   # required
            authorization-grant-type: authorization_code
            scope: openid, profile, email, roles
          keycloak-admin-api-client:
            provider: keycloak
            client-id: admin-cli
            client-secret: IR0rcRrErPSoitJlwUN4dFRIeEJoAxGF
            authorization-grant-type: client_credentials

        provider:                                                           # provider setting
          keycloak:                                                         # oidc-provider
            issuer-uri: http://0.0.0.0:8080/realms/variety-store            # required
            user-name-attribute: preferred_username

      resourceserver:
        jwt:
          issuer-uri: http://0.0.0.0:8080/realms/variety-store

logging.level:
  org.hibernate.SQL: debug
  org.hibernate.orm.jdbc.bind: trace

eureka:
  instance:
    instance_id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
